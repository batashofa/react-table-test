{"version":3,"sources":["store/action.js","components/pagination/pagination.js","components/table.js","App.jsx","reportWebVitals.js","store/reduser.js","index.js"],"names":["GET_DATA","SORT_DATA","getData","payload","type","Pagination","props","state","currentPage","prevProps","prevState","snapshot","this","numOfElements","setState","page","buttonArray","numOfPages","Math","ceil","elementsPerPage","space","i","push","className","onClick","handleClick","textPaginationItems","onClickLeft","getPaginationButtons","onClickRight","React","Component","Table","id","useState","setPage","reversed","setReversed","data","useSelector","dispatch","useDispatch","useEffect","e","target","parentNode","childNodes","forEach","item","field","sortData","slice","dataPerPage","map","index","firstName","lastName","email","phone","adress","length","App","setId","searchText","setSearchText","stateData","setStateData","states","Set","reduce","arr","value","getUserData","fetch","then","res","json","catch","error","console","log","placeholder","onChange","filteredData","filter","Object","values","toString","toLowerCase","includes","description","streetAddress","city","zip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","sort","a","b","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03b7e4cd.chunk.js","sourcesContent":["export const GET_DATA = \"GET_DATA\";\r\nexport const SORT_DATA = \"SORT_DATA\";\r\n\r\nexport const getData = (payload) => ({\r\n    type: GET_DATA,\r\n    payload: payload\r\n});\r\n\r\nexport const sortData = (field, reversed) => ({\r\n    type: SORT_DATA,\r\n    field: field,\r\n    reversed\r\n});\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./pagination.css\";\r\n\r\nexport default class Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPage: 1,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.numOfElements !== prevProps.numOfElements) {\r\n            this.setState({currentPage: 1})\r\n        }\r\n    }\r\n\r\n    handleClick(page) {\r\n        this.props.currentPage(page);\r\n        this.setState({currentPage: page});\r\n    }\r\n\r\n    getPaginationButtons() {\r\n        const buttonArray = [];\r\n        const paginationSize = 3;\r\n        const numOfPages = Math.ceil(\r\n            this.props.numOfElements / this.props.elementsPerPage\r\n        );\r\n        let space = \"\";\r\n        for (let i = 0; i < paginationSize; i++) {\r\n            let page = this.state.currentPage + i;\r\n\r\n            if (this.state.currentPage + 2 >= numOfPages) {\r\n                page = numOfPages - 2 + i;\r\n                space = \"\";\r\n            }\r\n\r\n            if (page > 0) {\r\n\r\n                buttonArray.push(\r\n                    <button\r\n                        key={page}\r\n                        className={`pagination__button ${page === this.state.currentPage ? \"pagination__button-active\" : \"\"\r\n                        } `}\r\n                        onClick={() => this.handleClick(page)}\r\n                    >\r\n                        {page}\r\n                    </button>\r\n                );\r\n            }\r\n        }\r\n\r\n        buttonArray.push(space);\r\n        return buttonArray;\r\n    }\r\n\r\n    onClickLeft() {\r\n        if (this.state.currentPage > 1) {\r\n            return this.state.currentPage - 1;\r\n        } else {\r\n            return this.state.currentPage;\r\n        }\r\n    }\r\n\r\n    onClickRight() {\r\n        if (this.props.numOfElements === 0) {\r\n            return this.state.currentPage;\r\n        }\r\n        if (this.state.currentPage >= 1 && this.state.currentPage < this.props.numOfElements / this.props.elementsPerPage) {\r\n            return this.state.currentPage + 1;\r\n        } else {\r\n            return this.state.currentPage;\r\n        }\r\n    }\r\n\r\n    textPaginationItems() {\r\n        if (this.props.numOfElements === 0) {\r\n            return this.state.currentPage - 1;\r\n        }\r\n        if (\r\n            this.props.numOfElements !==\r\n            this.state.currentPage * this.props.elementsPerPage + 1\r\n        ) {\r\n            return `${this.state.currentPage * this.props.elementsPerPage - 19}-${this.state.currentPage * this.props.elementsPerPage >\r\n            this.props.numOfElements\r\n                ? this.props.numOfElements\r\n                : this.state.currentPage * this.props.elementsPerPage\r\n            }`;\r\n        }\r\n        return this.props.numOfElements;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pagination\">\r\n                <ul className=\"pagination__list\">\r\n                    <li>\r\n                        {this.textPaginationItems()} of {this.props.numOfElements} items\r\n                    </li>\r\n                    <li className=\"pagination__list-left\">\r\n                        <b onClick={() => this.handleClick(this.onClickLeft())}>Previous</b>\r\n                    </li>\r\n                    <li>{this.getPaginationButtons()}</li>\r\n                    <li className=\"pagination__list-right\">\r\n                        <b onClick={() => this.handleClick(this.onClickRight())}>Next</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport \"./table.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sortData} from \"../store/action\";\r\nimport Pagination from \"./pagination/pagination\";\r\n\r\nconst Table = ({id}) => {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [reversed, setReversed] = useState(false);\r\n    const data = useSelector((state) => state.data);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setPage(1)\r\n    }, [data])\r\n\r\n    const dataPerPage = (page) => {\r\n        return data?.slice((page - 1) * 20, (page - 1) * 20 + 20);\r\n    }\r\n\r\n    const onClickSort = (e) => {\r\n        setReversed(!reversed);\r\n        if (e.target.className === \"arrowUp\") {\r\n            e.target.className = \"arrowDown\"\r\n        } else {\r\n            e.target.parentNode.childNodes.forEach(item => item.className = \"arrowDown\");\r\n            e.target.className = \"arrowUp\";\r\n        }\r\n        dispatch(sortData(e.target.id, reversed))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table\">\r\n                <tr onClick={onClickSort}\r\n                >\r\n                    <th id=\"id\" className={\"arrowDown\"}>\r\n                        id\r\n                    </th>\r\n                    <th id=\"firstName\" className={\"arrowDown\"}>\r\n                        First name\r\n                    </th>\r\n                    <th id=\"lastName\" className={\"arrowDown\"}>\r\n                        Last name\r\n                    </th>\r\n                    <th id=\"email\" className={\"arrowDown\"}>\r\n                        Email\r\n                    </th>\r\n                    <th id=\"phone\" className={\"arrowDown\"}>\r\n                        Phone\r\n                    </th>\r\n                    <th id=\"adress\" className={\"arrowDown\"}>\r\n                        State\r\n                    </th>\r\n                </tr>\r\n                {dataPerPage(page).map((item, index) =>\r\n                    <tr className=\"tr-info\" onClick={() => id(index + (page - 1) * 20)} key={index}>\r\n                        <td className=\"td-info\">\r\n                            {item.id}\r\n                        </td>\r\n                        <td className=\"td-info\">\r\n                            {item.firstName}\r\n                        </td>\r\n                        <td className=\"td-info\">\r\n                            {item.lastName}\r\n                        </td>\r\n                        <td className=\"td-info\">\r\n                            {item.email}\r\n                        </td>\r\n                        <td className=\"td-info\">\r\n                            {item.phone}\r\n                        </td>\r\n                        <td className=\"td-info\">\r\n                            {item.adress.state}\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </table>\r\n            <Pagination\r\n                currentPage={(page) => setPage(page)}\r\n                numOfElements={data.length}\r\n                elementsPerPage={20}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n","import './App.css';\nimport Table from \"./components/table\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {getData} from \"./store/action\";\n\n\nfunction App() {\n    const dispatch = useDispatch()\n    const data = useSelector((state) => state.data);\n    const [id, setId] = useState(0);\n    const [searchText, setSearchText] = useState(\"\");\n    const [stateData, setStateData] = useState([]);\n    const states = [...new Set(stateData.reduce((arr, value) => {\n        arr = [...arr, value.adress.state];\n        return arr;\n    }, []))];\n\n    useEffect(() => {\n        getUserData()\n    }, [])\n\n    const getUserData = () => {\n        fetch(\"https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json\")\n            .then((res) => res.json())\n            .then((res) => {\n                dispatch(getData(res));\n                setStateData(res)\n            })\n            .catch((error) => console.log(error));\n    }\n    const search = (e) => {\n        setSearchText(e.target.value);\n        const filteredData = stateData.filter((item) => {\n            return Object.values(item).toString().toLowerCase().includes(e.target.value.toLowerCase());\n        })\n        dispatch(getData(filteredData));\n    }\n    const searchByState = (e) => {\n        setSearchText(\"\")\n        const filteredData = stateData.filter((item) => {\n            return item.adress.state === e.target.value;\n        })\n        dispatch(getData(filteredData));\n    }\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"heading\">Table</h1>\n            <div className=\"form\">\n                <input className=\"form__search\" value={searchText} placeholder=\"Search\" onChange={search}/>\n                <select className=\"form__filter\" onChange={searchByState}>\n                    {states.map((item) => <option>{item}</option>)}\n                </select>\n            </div>\n            <Table id={(index) => setId(index)}/>\n            <div className=\"info__wrapper\">\n                <div className=\"info\">\n                    <b className=\"info__title\">Profile info:</b>\n                    <div className=\"info__text\">\n                        <span>Selected profile: </span>{data[id]?.firstName} {data[id]?.lastName}</div>\n                    <div className=\"info__text\"><span>Desctiption: </span>{data[id]?.description}</div>\n                    <div className=\"info__text\"><span>Address: </span>{data[id]?.adress.streetAddress} </div>\n                    <div className=\"info__text\"><span>City: </span>{data[id]?.adress.city}</div>\n                    <div className=\"info__text\"><span>State: </span>{data[id]?.adress.state}</div>\n                    <div className=\"info__text\"><span>Index: </span>{data[id]?.adress.zip}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {GET_DATA, SORT_DATA} from \"./action\";\r\n\r\nconst initialState = {\r\n    data: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DATA: {\r\n            return {data: action.payload};\r\n        }\r\n        case SORT_DATA: {\r\n            const data = [...state.data];\r\n            data.sort((a, b) => {\r\n                if (a[action.field] > b[action.field] || a[action.field].state > b[action.field].state) {\r\n                    return action.reversed ? -1 : 1;\r\n                }\r\n                if (a[action.field] < b[action.field] || a[action.field].state < b[action.field].state) {\r\n                    return action.reversed ? 1 : -1;\r\n                }\r\n                return 0;\r\n            })\r\n            return {\r\n                data: data\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport { createStore} from 'redux';\nimport reducer from \"./store/reduser\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}